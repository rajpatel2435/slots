---
import SeoTags from "../components/SeoTags.astro";
interface Props {
  title: string;
}

const { title } = Astro.props;
import { getSeoData } from "../lib/seoUtils";
const seo = await getSeoData(Astro);

const fullUrl = Astro.request.url;
const url = new URL(fullUrl);
const searchParams = url.searchParams;

const pageParam = searchParams.get("page");
const pageTitleSuffix = pageParam
  ? ` - Slots Paradise Online Casino Real Money - Games, Guides & More - Page ${pageParam}`
  : "";

const seoTitle = seo?.metaTitle
  ? `${seo.metaTitle}${pageTitleSuffix}`
  : `${title}${pageTitleSuffix}`;
  
  
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/content/img/favicons/favicon.png?v=1711485276"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{seoTitle || title }</title>
    <SeoTags />
    <style>
      @font-face {
        font-family: "Gilroy-Light";
        src: url("/fonts/Gilroy-Light.woff");
        font-weight: normal;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: "Gilroy-Bold";
        src: url("/fonts/Gilroy-Bold.woff");
        font-weight: normal;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: "Gilroy-Medium";
        src: url("/fonts/Gilroy-Medium.woff");
        font-weight: normal;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: "Gilroy-Regular";
        src: url("/fonts/Gilroy-Regular.woff");
        font-weight: normal;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: "Gilroy-ExtraBold";
        src: url("/fonts/Gilroy-ExtraBold.woff");
        font-weight: normal;
        font-style: normal;
        font-display: swap;
      }
    </style>

    <!-- Google Tag Manager -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "GTM-TSTVXS8");
    </script>
    <!-- End Google Tag Manager -->

    <script type="text/javascript">
      function setAffiliateCookie() {
        // Drop affiliate tracking cookie
        const urlParams = new URLSearchParams(window.location.search);

        if (
          urlParams.has("si") &&
          urlParams.has("bt") &&
          urlParams.has("dtag")
        ) {
          const cookieValue = encodeURIComponent(
            `{"bt":"${urlParams.get("bt")}","dtag":"${urlParams.get(
              "dtag",
            )}","si":"${urlParams.get("si")}"}`,
          );

          const affCookieValue = `r_i=${cookieValue};max-age=2592000;path=/`;
          document.cookie = affCookieValue;
        }
      }

      document.addEventListener("DOMContentLoaded", function () {
        setAffiliateCookie();
      });
    </script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-5WZF5ZY0PX"
    ></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-5WZF5ZY0PX");
    </script>

    <script async src="https://up.pixel.ad/assets/up.js?um=1"></script>
    <script type="text/javascript">
      cntrUpTag.track("cntrData", "7834ab18595ab3d8");
    </script>

    <script>
      window["_fs_host"] = "fullstory.com";
      window["_fs_script"] = "edge.fullstory.com/s/fs.js";
      window["_fs_org"] = "W47YD";
      window["_fs_namespace"] = "FS";
      !(function (m, n, e, t, l, o, g, y) {
        var s,
          f,
          a = (function (h) {
            return (
              !(h in m) ||
              (m.console &&
                m.console.log &&
                m.console.log(
                  'FullStory namespace conflict. Please set window["_fs_namespace"].',
                ),
              !1)
            );
          })(e);
        function j(b) {
          var h,
            d = [];
          function k() {
            h &&
              (d.forEach(function (b) {
                var d;
                try {
                  d = b[h[0]] && b[h[0]](h[1]);
                } catch (h) {
                  return void (b[3] && b[3](h));
                }
                d && d.then ? d.then(b[2], b[3]) : b[2] && b[2](d);
              }),
              (d.length = 0));
          }
          function r(b) {
            return function (d) {
              h || ((h = [b, d]), k());
            };
          }
          return (
            b(r(0), r(1)),
            {
              then: function (b, h) {
                return j(function (r, i) {
                  d.push([b, h, r, i]), k();
                });
              },
            }
          );
        }
        a &&
          ((g = m[e] =
            (function () {
              var b = function (b, d, k, r) {
                function i(i, c) {
                  h(b, d, k, i, c, r);
                }
                r = r || 2;
                var c,
                  u = /Async$/;
                return u.test(b)
                  ? ((b = b.replace(u, "")),
                    "function" == typeof Promise ? new Promise(i) : j(i))
                  : h(b, d, k, c, c, r);
              };
              function h(h, d, k, r, i, c) {
                return b._api
                  ? b._api(h, d, k, r, i, c)
                  : (b.q && b.q.push([h, d, k, r, i, c]), null);
              }
              return (b.q = []), b;
            })()),
          (y = function (b) {
            function h(h) {
              "function" == typeof h[4] && h[4](new Error(b));
            }
            var d = g.q;
            if (d) {
              for (var k = 0; k < d.length; k++) h(d[k]);
              (d.length = 0), (d.push = h);
            }
          }),
          (function () {
            ((o = n.createElement(t)).async = !0),
              (o.crossOrigin = "anonymous"),
              (o.src = "https://" + l),
              (o.onerror = function () {
                y("Error loading " + l);
              });
            var b = n.getElementsByTagName(t)[0];
            b.parentNode.insertBefore(o, b);
          })(),
          (function () {
            function b() {}
            function h(b, h, d) {
              g(b, h, d, 1);
            }
            function d(b, d, k) {
              h("setProperties", { type: b, properties: d }, k);
            }
            function k(b, h) {
              d("user", b, h);
            }
            function r(b, h, d) {
              k({ uid: b }, d), h && k(h, d);
            }
            (g.identify = r),
              (g.setUserVars = k),
              (g.identifyAccount = b),
              (g.clearUserCookie = b),
              (g.setVars = d),
              (g.event = function (b, d, k) {
                h("trackEvent", { name: b, properties: d }, k);
              }),
              (g.anonymize = function () {
                r(!1);
              }),
              (g.shutdown = function () {
                h("shutdown");
              }),
              (g.restart = function () {
                h("restart");
              }),
              (g.log = function (b, d) {
                h("log", { level: b, msg: d });
              }),
              (g.consent = function (b) {
                h("setIdentity", { consent: !arguments.length || b });
              });
          })(),
          (s = "fetch"),
          (f = "XMLHttpRequest"),
          (g._w = {}),
          (g._w[f] = m[f]),
          (g._w[s] = m[s]),
          m[s] &&
            (m[s] = function () {
              return g._w[s].apply(this, arguments);
            }),
          (g._v = "2.0.0"));
      })(window, document, window._fs_namespace, "script", window._fs_script);
    </script>
  </head>
  <body>
    <slot />

    <script>
      const termsButtons = document.querySelectorAll(".terms");
      const popupSections = document.querySelectorAll(".popup");
      const closeButtons = document.querySelectorAll(".close");

      termsButtons.forEach((btn, index) => {
        btn.addEventListener("click", () => {
          // Use the specific index to access the corresponding popupSection
          popupSections[index].classList.remove("hidden");
        });
      });

      closeButtons.forEach((closeButton, index) => {
        closeButton.addEventListener("click", () => {
          // Use the specific index to access the corresponding popupSection
          popupSections[index].classList.add("hidden");
        });
      });
    </script>
  </body>
</html>
